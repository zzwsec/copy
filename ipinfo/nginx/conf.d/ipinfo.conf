server {
    listen       80 default_server;
    listen       [::]:80 default_server;
    server_name  _;

    # 提取真实 IP
    set $real_ip $remote_addr;
    if ($http_x_forwarded_for != "") {
        set $real_ip $http_x_forwarded_for; # 使用 X-Forwarded-For 的第一个 IP
    }

    # 安全HTTP头
    add_header   X-Powered-By             "zzwsec/ipinfo" always;
    add_header   Cache-Control            "no-store" always;
    add_header   X-Frame-Options          "SAMEORIGIN" always;
    add_header   X-XSS-Protection         "1; mode=block" always;
    add_header   X-Content-Type-Options   "nosniff" always;
    add_header   Referrer-Policy          "no-referrer-when-downgrade" always;
    add_header   Content-Security-Policy  "default-src 'none'; img-src 'self'" always;

    # 定义组合变量，处理空值
    set $ip_country "$ip_country_code / $ip_country_name";
    set $ip_as      "AS$ip_asn / $ip_aso";
    set $ip_location "";
    if ($ip_city != "") {
        set $ip_location "$ip_city";
    }
    if ($ip_region != "") {
        set $ip_location "$ip_location, $ip_region";
    }
    if ($ip_country != "") {
        set $ip_location "$ip_location, $ip_country";
    }
    if ($ip_location = "") {
        set $ip_location "Location data unavailable";
    }

    # 静态资源
    location = /favicon.ico {
        root /usr/share/nginx/html;
        access_log off;
        log_not_found off;
    }

    location = /robots.txt {
        access_log off;
        log_not_found off;
    }

    # 跳转链接
    location = /github {
        return 301 https://github.com/zzwsec;
    }

    # 基本IP信息
    location = /ip {
        return 200      "$real_ip\n"; # 使用 $real_ip
    }

    location = /country {
        return 200      "$ip_country\n";
    }

    location = /country_code {
        return 200      "$ip_country_code\n";
    }

    location = /country_name {
        return 200      "$ip_country_name\n";
    }

    location = /as {
        return 200      "$ip_as\n";
    }

    location = /asn {
        return 200      "$ip_asn\n";
    }

    location = /as_desc {
        return 200      "$ip_aso\n";
    }

    location = /user_agent {
        return 200      "$http_user_agent\n";
    }

    # 城市相关端点
    location = /city {
        if ($ip_city = "") {
            set $ip_city "City data unavailable";
        }
        return 200      "$ip_city\n";
    }

    location = /region {
        if ($ip_region = "") {
            set $ip_region "Region data unavailable";
        }
        return 200      "$ip_region\n";
    }

    location = /location {
        return 200      "$ip_location\n";
    }

    location ~* ^/index.htm(l)?$ {
        rewrite ^(.*)$ /;
    }

    location = / {
        return 200 "$real_ip\n$ip_location\n$ip_as\n\n$http_user_agent\n"; # 使用 $real_ip
    }

    # JSON API返回
    location = /json {
        default_type application/json;
        set $city_output $ip_city;
        set $city_note "";
        if ($city_output = "") {
            set $city_output "null";
            set $city_note "City data not available in GeoLite2-City database";
        }
        set $region_output $ip_region;
        set $region_note "";
        if ($region_output = "") {
            set $region_output "null";
            set $region_note "Region data not available in GeoLite2-City database";
        }
        return 200 "{
    \"ip\": \"$real_ip\",
    \"country_code\": \"$ip_country_code\",
    \"country_name\": \"$ip_country_name\",
    \"city\": \"$city_output\",
    \"city_note\": \"$city_note\",
    \"region\": \"$region_output\",
    \"region_note\": \"$region_note\",
    \"asn\": \"$ip_asn\",
    \"as_desc\": \"$ip_aso\",
    \"user_agent\": \"$http_user_agent\"
}\n";
    }

    location = /build_epoch {
        default_type application/json;
        return 200 "{
    \"GeoLite2-Country\": \"$ip_country_build_epoch\",
    \"GeoLite2-ASN\": \"$ip_as_build_epoch\",
    \"GeoLite2-City\": \"$ip_city_build_epoch\"
}\n";
    }

    # 健康检查
    location = /health {
        return 200 'OK';
        access_log off;
        log_not_found off;
        add_header Content-Type text/plain;
    }

    location @404 {
        return 404 "404 not found";
    }

    error_page 404 = @404;
}
